upstream backend {
    server prerender;
}

server {
    listen      80;
    server_name selander.li;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    location / {
        try_files $uri @prerender;
    }

    sendfile off;

    location @prerender {
        #proxy_set_header X-Prerender-Token YOUR_TOKEN;

        set $prerender 0;
        if ($http_user_agent ~* (google|yahoo|bing|baidu|ask|facebook|twitter|linkedin|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator)) {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~ "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff)") {
            set $prerender 0;
        }

        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 127.0.0.1;

        if ($prerender = 1) {
            #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $prerender "prerender";
            rewrite .* /$scheme://selanderli$request_uri? break;
            proxy_pass http://prerender:3000;
        }
        if ($prerender = 0) {
            rewrite .* /index.html break;
        }

    }
}

server {
    listen       80;
    server_name  localhost;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    sendfile off;

    location / {
        rewrite ^(.*)\/assets\/(.*)$ /assets/$2 break;
        expires -1;
        add_header Pragma "no-cache";
        add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
        try_files $uri $uri/ /index.html;
    }
}